name: Release Extension
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  release:
    name: Release Extension
    runs-on: ubuntu-latest
    steps:
      - name: install emcc
        run: git clone https://github.com/emscripten-core/emsdk.git
      - run: cd emsdk && ./emsdk install latest && ./emsdk activate latest
      - run: cd emsdk && cat ./emsdk_env.sh && source ./emsdk_env.sh

      - name: Checkout code
        uses: actions/checkout@v2
      - run: npm install

      - name: Set Release Tag Env
        id: get_tag
        run: echo ::set-env name=RELEASE_TAG::${GITHUB_REF#refs/*/}
      - run: npm run vscode:package -- -o extension.${{ env.RELEASE_TAG }}.vsix

      - run: git fetch --depth=1 origin +refs/tags/${{ env.RELEASE_TAG }}:refs/tags/${{ env.RELEASE_TAG }}
      - run: git for-each-ref --format="%(subject)%0a%0a%(body)" refs/tags/${{ env.RELEASE_TAG }} > body.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Release ${{ env.RELEASE_TAG }}
          body_path: body.md
          draft: false
          prerelease: ${{ contains(env.RELEASE_TAG, '-') }}

      - name: Upload release asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension.${{env.RELEASE_TAG}}.vsix
          asset_name: move-syntax-highlight.${{env.RELEASE_TAG}}.vsix
          asset_content_type: application/zip

      - name: Publish Extension
        run: npm run vscode:publish -- --packagePath ./extension.${{env.RELEASE_TAG}}.vsix -p ${{ secrets.VSCE_TOKEN }}